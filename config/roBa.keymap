#define ZMK_MOUSE_DEFAULT_SCRL_VAL 80

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball { scroll-layers = <3>; };

/ {
    combos {
        compatible = "zmk,combos";

        intfour {
            bindings = <&kp INT4>;
            key-positions = <38 41>;
            layers = <0 1>;
        };

        intfive {
            bindings = <&kp INT5>;
            key-positions = <39 40>;
            layers = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        blendermb3shift: blendermb3shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &mkp MB3>;
            label = "BLENDERMB3SHIFT";
        };

        audioswitchzg02: audioswitchzg02 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(LA(Z))) &kp LS(LA(LC(X)))>;
            label = "AUDIOSWITCHZG02";
        };

        audioswitchliberty5: audioswitchliberty5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(L)))>;
            label = "AUDIOSWITCHLIBERTY5";
        };

        pin: password {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N9 &kp NUMBER_2 &kp N0>;
            label = "PASSWORD";
        };
    };

    behaviors {
        scroll_up_down: up.down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        kpmkp: kpmkp {
            compatible = "zmk,behavior-hold-tap";
            label = "KPMKP";
            bindings = <&kp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        momkp: momkp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMKP";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <0>;
        };

        LTadvance: LTadvance {
            compatible = "zmk,behavior-hold-tap";
            label = "LTADVANCE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Ohnisi {
            bindings = <
&kp Q        &kp J         &kp U         &kp COMMA           &kp DOT                                                     &kp F          &kp W  &lt 3 R  &kp Y  &kp P
&kp E        &kp I         &kp A         &kp O               &kp MINUS  &to 1                       &to 1                &kp K          &kp T  &kp N    &kp S  &kp H
&mt LCTRL L  &kp X         &kp N         &kp V               &kp C      &kp INT5                    &kp INTERNATIONAL_4  &kp G          &kp D  &kp M    &kp Z  &mt RCTRL B
&mo 4        &kp LEFT_GUI  &kp LEFT_ALT  &LTadvance 6 SPACE  &mkp LCLK  &kpmkp LEFT_SHIFT RCLK      &LTadvance 5 ENTER   &kp BACKSPACE                         &mo 4
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        blender {
            bindings = <
&kp N1  &kp N2    &kp N3        &kp R             &kp T                                            &kp Y  &kp U  &lt 3 I  &kp O    &kp P
&kp A   &kp S     &kp NUMBER_6  &kp LS(NUMBER_6)  &mt LCTRL TAB  &to 0                  &to 0      &kp H  &kp R  &kp G    &kp S    &kp SEMI
&kp Z   &kp Z     &kp X         &kp Y             &kp B          &kp PERIOD             &kp SLASH  &kp N  &kp M  &kp D    &kp DOT  &kp FSLH
&trans  &kp LGUI  &kp LALT      &trans            &trans         &kpmkp LCTRL RCLK      &kp LC(Z)  &kp X                           &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&to_layer_0 Q      &to_layer_0 Z  &to_layer_0 U  &to_layer_0 COMMA  &to_layer_0 PERIOD                         &to_layer_0 F  &to_layer_0 W  &trans    &to_layer_0 Y  &to_layer_0 P
&to_layer_0 E      &to_layer_0 I  &mkp MCLK      &kp LEFT_SHIFT     &to_layer_0 MINUS      &trans      &to 0   &to_layer_0 K  &mkp MB1       &mkp MB3  &mkp MB2       &to_layer_0 H
&to_layer_0 LCTRL  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V      &to_layer_0 SEMICOLON  &trans      &trans  &to_layer_0 G  &mkp MB4       &to 0     &mkp MB5       &to_layer_0 LCTRL
&trans             &trans         &trans         &trans             &trans                 &trans      &trans  &trans                                                 &trans
            >;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q      &to_layer_0 Z  &to_layer_0 U  &to_layer_0 COMMA  &to_layer_0 PERIOD                                         &to_layer_0 F  &to_layer_0 W  &trans    &to_layer_0 Y  &to_layer_0 P
&to_layer_0 E      &to_layer_0 I  &mkp MCLK      &kp LEFT_SHIFT     &to_layer_0 MINUS      &trans                      &to 0   &to_layer_0 K  &mkp MB1       &mkp MB3  &mkp MB2       &to_layer_0 H
&to_layer_0 LCTRL  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V      &to_layer_0 SEMICOLON  &trans                      &trans  &to_layer_0 G  &mkp MB4       &to 0     &mkp MB5       &to_layer_0 RCTRL
&trans             &trans         &trans         &trans             &trans                 &to_layer_0 LEFT_SHIFT      &trans  &trans                                                 &trans
            >;
        };

        NUM {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12  &kp PLUS                                              &kp ASTERISK   &kp N7  &kp N8  &kp N9  &kp SLASH
&kp F5  &kp F6   &kp F7   &kp F8   &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp TILDE  &kp PLUS       &kp N4  &kp N5  &kp N6  &kp MINUS
&kp F1  &kp F2   &kp F3   &kp F4   &kp PERIOD    &kp EQUAL                    &kp COLON  &kp N0         &kp N1  &kp N2  &kp N3  &kp DOT
&trans  &trans   &trans   &trans   &trans        &pin                         &kp ENTER  &kp BACKSPACE                          &kp PIPE
            >;
        };

        MARk {
            bindings = <
&kp LSHFT  &trans  &kp RBKT    &kp GRAVE   &trans                       &kp F1  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)
&trans     &trans  &kp LS(N8)  &kp LS(N9)  &trans  &trans      &kp ESC  &kp F6  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LBKT
&trans     &trans  &kp SEMI    &kp APOS    &trans  &trans      &trans   &kp N0  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp QUESTION
&trans     &trans  &trans      &trans      &trans  &trans      &trans   &trans                                              &kp F12
            >;

            sensor-bindings = <&inc_dec_kp LS(LC(LG(NUMBER_1))) LS(LC(LG(NUMBER_2)))>;
        };

        ARROW {
            bindings = <
&bt BT_SEL 0              &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3       &bt BT_SEL 4                                                         &kp PG_UP             &kp HOME         &kp UP       &kp END    &kp PAGE_DOWN
&kp LS(LA(LG(LC(LEFT))))  &kp LG(LEFT)      &kp LA(TAB)        &kp LG(RIGHT)      &kp LC(LA(LS(LG(RIGHT))))  &bt BT_CLR_ALL      &audioswitchzg02      &kp LA(LG(LC(LEFT)))  &kp LEFT         &kp DOWN     &kp RIGHT  &kp LA(LC(LG(RIGHT)))
&kp LG(UP_ARROW)          &kp LG(LS(LEFT))  &kp LC(LA(LG(P)))  &kp LG(LS(RIGHT))  &trans                     &kp LG(LS(S))       &audioswitchliberty5  &trans                &kp LC(LS(TAB))  &kp LC(TAB)  &kp LC(T)  &kp LC(W)
&trans                    &trans            &trans             &trans             &trans                     &trans              &kp LC(C)             &kp LC(V)                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LA(LC(LG(LEFT_ARROW))) LA(LC(LG(RIGHT_ARROW)))>;
        };
    };
};
